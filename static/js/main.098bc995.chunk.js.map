{"version":3,"sources":["react-bootstrap-logo.svg","config/Fire.js","components/membershipBackground.js","components/membershipForm.js","components/loginForm.js","components/signupForm.js","components/membershipLayout.js","components/StudentTableHeaders.js","components/StudentTableBody.js","components/StudentTable.js","components/studentListPagination.js","components/studentList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","membershipBackground","this","props","BgURL","ClassName","InlineBg","backgroundImage","className","style","Component","membershipForm","headingText","render","HexColor777","color","p_25px_TopBottom","padding","loginForm","handleChange","e","setState","target","name","value","UserLogin","preventDefault","Firebase","auth","signInWithEmailAndPassword","state","Email","Password","then","u","catch","error","FireErrors","message","ScrollDownFormHandler","$ViewportWidth","$","window","innerWidth","PageScrolling","css","bind","errorNotification","id","Fragment","Form","Group","Label","htmlFor","Control","type","onChange","autoComplete","onClick","href","p_25px","initialState","ConfirmPassword","FirstName","MiddleName","LastName","date","Date","Gender","SignUpErrors","signupForm","empty","validate","ErrorCollection","push","includes","length","UserSignUp","fetch","method","headers","body","JSON","stringify","ID","Math","round","random","DateOfBirth","response","createUserWithEmailAndPassword","swal","String","console","log","datepickerHandler","ScrollUpFormHandler","document","getElementsByClassName","transform","forEach","append","onSubmit","dateFormat","required","membershipLayout","StudentTableHeaders","scope","StudentTableBody","GetAllStudents","firestore","collection","get","querySnapshot","studentRecords","docs","map","doc","data","item","index","key","StudentTable","tableOptions","PureComponent","studentListPagination","componentDidMount","PaginationItems","number","Item","active","activeItem","items","studentList","activePage","filter","children","removeClass","addClass","resize","disabled","placeholder","App","TestFireConnection","database","ref","onDisconnect","set","on","snap","val","user","authListener","logOut","signOut","onAuthStateChanged","bg","variant","Brand","alt","src","require","width","height","inline","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.098bc995.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-bootstrap-logo.26aa74fe.svg\";","import firebase from 'firebase'\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBVxVIY_VHaPI0UUIATqJzpcsdffErSi98\",\r\n    authDomain: \"eschooldemo-2b247.firebaseapp.com\",\r\n    databaseURL: \"https://eschooldemo-2b247.firebaseio.com\",\r\n    projectId: \"eschooldemo-2b247\",\r\n    storageBucket: \"eschooldemo-2b247.appspot.com\",\r\n    messagingSenderId: \"935713481444\",\r\n    appId: \"1:935713481444:web:c32a24435f464b08\"\r\n  };\r\n\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig)\r\nexport default fire","import React, { Component } from 'react'\r\n\r\n\r\nclass membershipBackground extends Component {\r\n\r\n    render() {\r\n        const {BgURL,ClassName} = this.props\r\n        const InlineBg = {backgroundImage: `url(${BgURL})`}\r\n\r\n        return (\r\n            <div className={ClassName} style={InlineBg}></div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default membershipBackground\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass membershipForm extends Component {\r\n\r\n    render() {\r\n\r\n        const {className,headingText} = this.props\r\n\r\n        return (\r\n            <div className={className}>\r\n                <h1 className=\"text-center display-4 formHeading\">{headingText}</h1>\r\n                {this.props.render()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default membershipForm\r\n","import React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap';\r\nimport Firebase from '../config/Fire'\r\n\r\nimport $ from 'jquery';\r\n\r\nconst HexColor777 = { color: '#777' }\r\nconst p_25px_TopBottom = {padding: '25px 0'}\r\n\r\nclass loginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.UserLogin  = this.UserLogin.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n\r\n        this.state = {\r\n             Email : '',\r\n             Password : '',\r\n             FireErrors : ''\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value,\r\n            FireErrors : ''\r\n        })\r\n    }\r\n\r\n\r\n    UserLogin = e => {\r\n        e.preventDefault()\r\n        Firebase.auth()\r\n        .signInWithEmailAndPassword(this.state.Email,this.state.Password)\r\n        .then((u) =>{}).catch((error) => {\r\n            this.setState({FireErrors: error.message})\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    ScrollDownFormHandler = () => {\r\n        // console.log(\"Window_width: \" +  $(window).innerWidth() + \"  $(window).innerHeight())\r\n        \r\n        var $ViewportWidth = $(window).innerWidth();\r\n        var PageScrolling = 0;\r\n        \r\n        if($ViewportWidth > 1280) PageScrolling = -900 + \"px\"\r\n        else if($ViewportWidth > 700 && $ViewportWidth <= 1280) PageScrolling = -700 + \"px\";\r\n        else PageScrolling = -1100 + \"px\";\r\n\r\n        $(\".membership-forms\").css(\"transform\",`translateY(${PageScrolling})`)  \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let errorNotification = this.state.FireErrors ? \r\n        (<div style={p_25px_TopBottom} id=\"fireError\" className=\"text-danger\">{this.state.FireErrors}</div>) : null;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {errorNotification}                \r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"loginUsername\" className=\"lead\">Email</Form.Label>\r\n                        <Form.Control name=\"Email\" type=\"email\" id=\"loginUsername\" onChange={this.handleChange} value={this.state.Email} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"\" className=\"lead\">Password</Form.Label>\r\n                        <Form.Control name=\"Password\" type=\"password\" id=\"loginPassword\" autoComplete=\"true\" onChange={this.handleChange} value={this.state.Password} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label className=\"toggleCheckbox\" id=\"loginRememberMe\">\r\n                            <span className=\"lead\">Remember Me</span>\r\n                            <div className=\"toggleCheckbox__wrap\">\r\n                                <input type=\"checkbox\" />\r\n                                <b className=\"toggleCheckbox__handle\"></b>\r\n                            </div>\r\n                        </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <input onClick={this.UserLogin} type=\"submit\" className=\"btn text-white\" value=\"Login\" />\r\n                        <a style={HexColor777} className=\"btn btn-link float-right font-weight-bold\" href=\"#home\">Forget Password</a>\r\n                    </Form.Group>\r\n                </Form>\r\n                <div className=\"form-scroll-down\" onClick={this.ScrollDownFormHandler}>\r\n                    <i className=\"fa fa-angle-down\"></i>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default loginForm\r\n","import React, { Component } from 'react'\r\nimport Firebase from '../config/Fire'\r\nimport DatePicker from 'react-date-picker'\r\nimport { Form } from 'react-bootstrap'\r\nimport Row from 'react-bootstrap/Row'\r\nimport $ from 'jquery'\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst p_25px = {padding : \"25px 0\"}\r\nconst initialState = {\r\n    Email: '',\r\n    Password: '',\r\n    ConfirmPassword: '',\r\n    FirstName: '',\r\n    MiddleName: '',\r\n    LastName: '',\r\n    date: new Date(),\r\n    Gender: false,\r\n    SignUpErrors: [],\r\n};\r\n\r\n\r\nclass signupForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = initialState\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.UserSignUp = this.UserSignUp.bind(this)\r\n\r\n    }\r\n\r\n\r\n    handleChange = e => {\r\n        // console.log( \"Target Name: \" + [e.target.name] + \"target value: \" + e.target.value)\r\n        $(\"#fireError\").empty()\r\n\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            SignUpErrors: []\r\n        });\r\n    }\r\n\r\n\r\n    validate = () => {\r\n        let ErrorCollection = []\r\n\r\n        if (!this.state.FirstName) ErrorCollection.push(\"First Name is Required.\")\r\n        if (!this.state.LastName) ErrorCollection.push(\"Last Name is Required.\")\r\n        if (!this.state.Email.includes(\"@\")) ErrorCollection.push(\"Invalid Email Address.\")\r\n        if (!this.state.Password) ErrorCollection.push(\"Password is Required.\")\r\n        if (!this.state.ConfirmPassword) ErrorCollection.push(\"Confirm Password is Required.\")\r\n        if (this.state.Password !== this.state.ConfirmPassword) ErrorCollection.push(\"Password Mismatch.\")\r\n        \r\n        if (ErrorCollection.length > 0) {\r\n            this.setState({ SignUpErrors: ErrorCollection });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n\r\n\r\n    UserSignUp = e => {\r\n        e.preventDefault()\r\n        $(\"#fireError\").empty()\r\n\r\n        // Sign Up Form Validation\r\n        const IsValid = this.validate();\r\n        if (IsValid) {\r\n            // Post a new record of details into `Student` Collection            \r\n            fetch('https://us-central1-eschooldemo-2b247.cloudfunctions.net/AddNewStudent', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json charset=utf-8',\r\n                },\r\n                body: JSON.stringify({\r\n                    ID: Math.round(100 + (Math.random() * (9999999999999999999999999))),\r\n                    FirstName: this.state.FirstName,\r\n                    MiddleName: this.state.MiddleName,\r\n                    LastName: this.state.LastName,\r\n                    DateOfBirth: this.state.DateOfBirth,\r\n                    Gender: this.state.Gender,\r\n                    Email: this.state.Email,\r\n                    Password: this.state.Password,\r\n                })\r\n            }).then(response => {\r\n                // Hide all warnings\r\n                this.setState({initialState});\r\n                this.setState({SignUpErrors : []})\r\n                // Create User With Email And Password\r\n                Firebase.auth()\r\n                    .createUserWithEmailAndPassword(this.state.Email, this.state.Password)\r\n                    .catch((error) => {\r\n                        swal(\":(\", \"An error has occurred while Creating user\", \"error\");\r\n                    })\r\n\r\n                swal(\"Thank You\", \"Student has been recorded successfully\", \"success\")\r\n            }).catch(error => {\r\n                swal(\"An error has occurred!\", String(error), \"error\");\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    datepickerHandler = date => { $(\"#fireError\").empty(); this.setState({ date }) }\r\n    ScrollUpFormHandler = () => document.getElementsByClassName(\"membership-forms\")[0].style.transform = \"translateY(0px)\"\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={p_25px} id=\"fireError\" className=\"text-danger\"></div>\r\n                {\r\n                    this.state.SignUpErrors.forEach(error => {\r\n                        $(\"#fireError\").append(`<p style=\"margin-bottom : 0.25rem !important\">${error}</p>`)\r\n                    })\r\n                }\r\n\r\n                <Form onSubmit={this.UserSignUp}>\r\n                    <Row>\r\n                        <Form.Group className=\"col-sm\">\r\n                            <Form.Label htmlFor=\"SignUp-fname\" className=\"lead\">First Name</Form.Label>\r\n                            <Form.Control name=\"FirstName\" type=\"text\" id=\"SignUp-fname\" value={this.state.FirstName} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-sm\">\r\n                            <Form.Label htmlFor=\"SignUp-mname\" className=\"lead\">Middle Name</Form.Label>\r\n                            <Form.Control name=\"MiddleName\" type=\"text\" id=\"SignUp-mname\" value={this.state.MiddleName} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-sm\">\r\n                            <Form.Label htmlFor=\"SignUp-lname\" className=\"lead\">Last Name</Form.Label>\r\n                            <Form.Control name=\"LastName\" type=\"text\" id=\"SignUp-lname\" value={this.state.LastName} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row>\r\n                        <Form.Group className=\"col-sm\">\r\n                            <Form.Label htmlFor=\"datepicker\" className=\"lead\" >Date Of Birth</Form.Label>\r\n\r\n                            <DatePicker\r\n                                name=\"date\"\r\n                                dateFormat=\"yyyy/MM/dd\"\r\n                                value={this.state.date}\r\n                                onChange={this.datepickerHandler}\r\n                                required={true} />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-sm\" id=\"SignUp-Gender\">\r\n                            <Form.Label className=\"lead\">Gender</Form.Label>\r\n\r\n                            <Form.Label className=\"toggleCheckbox\">\r\n                                <div className=\"toggleCheckbox__wrap\">\r\n                                    <input type=\"checkbox\" id=\"SignUpGender\" name=\"Gender\" value={this.state.Gender} onChange={this.handleChange} />\r\n                                    <b className=\"toggleCheckbox__handle\"></b>\r\n                                </div>\r\n                            </Form.Label>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Form.Group className=\"form-group\">\r\n                        <Form.Label htmlFor=\"SignUp-Username\" className=\"lead\">Email</Form.Label>\r\n                        <Form.Control name=\"Email\" type=\"email\" id=\"SignUp-Username\" value={this.state.Email} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"form-group\">\r\n                        <Form.Label htmlFor=\"SignUp-Password\" className=\"lead\">Password</Form.Label>\r\n                        <Form.Control name=\"Password\" type=\"password\" id=\"SignUp-Password\" autoComplete=\"false\" value={this.state.Password} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"form-group\">\r\n                        <Form.Label htmlFor=\"SignUp-ConfirmPass\" className=\"lead\">Confirm Password</Form.Label>\r\n                        <Form.Control name=\"ConfirmPassword\" type=\"password\" id=\"SignUp-ConfirmPass\" autoComplete=\"false\" value={this.state.ConfirmPassword} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"form-group\">\r\n                        <input type=\"submit\" className=\"btn text-white\" value=\"Register\" />\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n\r\n                <div className=\"form-scroll-up\" onClick={this.ScrollUpFormHandler}>\r\n                    <i className=\"fa fa-angle-up\"></i>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default signupForm","import React, { Component } from 'react'\r\nimport FormBackground from './membershipBackground'\r\nimport Form from './membershipForm'\r\nimport LoginForm from './loginForm';\r\nimport SignUpForm from './signupForm';\r\n\r\n\r\nclass membershipLayout extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid body-content\">\r\n                <div id=\"membership\">\r\n                    <div className=\"membership-col-1\">\r\n                        <FormBackground\r\n                            BgURL = \"./Images/eSchool--bg.jpg\"\r\n                            ClassName=\"membership-bg\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"membership-col-2\">\r\n                        <div className=\"membership-forms\">\r\n\r\n                            <Form className=\"membership-login\" headingText=\"Login\" render={() => (\r\n                                <LoginForm />\r\n                            )} />\r\n\r\n                            <Form className=\"membership-SignUp\" headingText=\"Sign Up\" render={() => (\r\n                                <SignUpForm />\r\n                            )} />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default membershipLayout","import React, { Component } from 'react'\r\n\r\nclass StudentTableHeaders extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Student Name</th>\r\n                        <th scope=\"col\">Date Of Birth</th>\r\n                        <th scope=\"col\">Gender</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                </thead>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentTableHeaders\r\n","import React, { Component } from 'react'\r\nimport firebase from '../config/Fire'\r\n\r\nclass StudentTableBody extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            studentRecords: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetAllStudents();\r\n    }\r\n\r\n    GetAllStudents = () => {\r\n        firebase\r\n            .firestore().collection(\"Student\").get()\r\n            .then(querySnapshot => {\r\n                this.setState({ studentRecords: querySnapshot.docs.map(doc => doc.data()) })\r\n            })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <tbody>\r\n                {\r\n                    this.state.studentRecords.map(function (item, index) {\r\n                        return (\r\n                            <tr key={item.ID}>\r\n                                <th>{item.ID}</th>\r\n                                <td>{item.FirstName + \" \" + item.LastName}</td>\r\n                                <td>{item.DateOfBirth}</td>\r\n                                <td>{item.Gender === true ? \"Male\" : \"Female\"}</td>\r\n                                <td>{item.Email}</td>\r\n                                <td>{item.Password}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentTableBody\r\n\r\n\r\n\r\n\r\n\r\n","import React, { PureComponent } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport TableHeaders from './StudentTableHeaders'\r\nimport TableBody from './StudentTableBody'\r\n\r\n\r\n\r\nclass StudentTable extends PureComponent {\r\n    render() {\r\n        const {tableOptions} = this.props\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Table className={tableOptions}>\r\n                    <TableHeaders />\r\n                    <TableBody />\r\n                </Table>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // GetStudentTableHeaders = () => {\r\n    //     var keys = null\r\n    //     this.data.map(function(item,index){\r\n    //         if(index === 0){ // only one json object keys from array\r\n    //              keys = Object.keys(item)\r\n    //         }\r\n\r\n    //         return keys\r\n    //     });\r\n\r\n    //     this.setState({\r\n    //         headers : keys\r\n    //     })\r\n    // }\r\n}\r\n\r\nexport default StudentTable\r\n","import React, { Component } from 'react'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\n\r\nclass studentListPagination extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            active : 1,\r\n            items :  [],\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount = () =>{\r\n\r\n        var PaginationItems = []\r\n\r\n        for (let number = 1; number <= 1; number++) {\r\n            PaginationItems.push(\r\n                <Pagination.Item key={number} active={number === this.props.activeItem}>\r\n                    {number}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n\r\n        this.setState ({\r\n            active: this.props.activeItem,\r\n            items: PaginationItems\r\n        })\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {      \r\n  \r\n        const paginationBasic = (\r\n            <React.Fragment>              \r\n                <Pagination>\r\n                    <Pagination.Item><i className=\"fa fa-chevron-left\"></i></Pagination.Item>\r\n\r\n                        {this.state.items}\r\n                    \r\n                    <Pagination.Item><i className=\"fa fa-chevron-right\"></i></Pagination.Item>\r\n                </Pagination>\r\n            </React.Fragment>\r\n          )\r\n\r\n        return paginationBasic\r\n    }\r\n}\r\n\r\nexport default studentListPagination\r\n","import React, { Component } from 'react'\r\nimport Table from './StudentTable'\r\nimport Pagination from './studentListPagination'\r\nimport $ from 'jquery';\r\n\r\nclass studentList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activePage: 1,\r\n            filter : ''\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        // Responsive Table Optimization\r\n        var $viewportWidth = $(window).innerWidth()\r\n\r\n        if ($viewportWidth > 702) $(\".studentList\").children(\"table\").removeClass(\"table-responsive\")\r\n        else $(\".studentList\").children(\"table\").addClass(\"table-responsive\")\r\n\r\n\r\n        $(window).resize(function () {\r\n            if ($(this).innerWidth() > 702) $(\".studentList\").children(\"table\").removeClass(\"table-responsive\")\r\n            else $(\".studentList\").children(\"table\").addClass(\"table-responsive\")\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        const { activePage } = this.state\r\n        return (\r\n            <div className=\"studentList\">\r\n                <div className=\"student-list-header\">\r\n                    <h4 className=\"display-4 text-center\">Student List</h4>\r\n                    <input disabled type=\"search\" id=\"search-students\" className=\"form-control\" placeholder=\"Search Student\" />\r\n                </div>\r\n                {/******************************************************/}\r\n                {/******************************************************/}\r\n\r\n                <Table tableOptions=\"table table-striped table-hover lead\" />\r\n\r\n                {/******************************************************/}\r\n                {/******************************************************/}\r\n\r\n                <Pagination activeItem={activePage} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default studentList","import React, { Component } from 'react'\r\nimport firebase from './config/Fire'\r\nimport './App.css';\r\nimport Membership from './components/membershipLayout.js'\r\nimport StudentList from './components/studentList';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\n\r\n/*\r\n\r\nMQ NOTE:\r\n    This application is responsive on all screen devices and ending with viewport 320px.\r\n    ** BEFORE YOU START TESTING : Make sure to Refresh Page every time you want to resize the screen\r\n       to ensure the correct rendering of stylesheets.\r\n\r\n\r\n    -------- Login Credentials -----------\r\n    Username : admin@mail.com\r\n    Password : 123456\r\n*/\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      user: null,\r\n    }\r\n    this.authListener = this.authListener.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n     this.TestFireConnection()\r\n     this.authListener()\r\n  }\r\n\r\n\r\n\r\n\r\n  logOut() {\r\n    firebase.auth().signOut()\r\n  }\r\n\r\n  authListener() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      // console.log(user);\r\n      if (user) {\r\n        this.setState({ user });\r\n        // localStorage.setItem('user', user.uid);\r\n      } else {\r\n        this.setState({ user: null });\r\n        // localStorage.removeItem('user');\r\n      }\r\n    });\r\n  }\r\n\r\n  TestFireConnection = () => {\r\n    var presenceRef = firebase.database().ref(\"disconnectmessage\");\r\n    // Write a string when this client loses connection\r\n    presenceRef.onDisconnect().set(\"Aw Snap! :( You Are Now disconnected\");\r\n\r\n    var connectedRef = firebase.database().ref(\".info/connected\");\r\n    connectedRef.on(\"value\", function (snap) {\r\n      \r\n\r\n      if (snap.val() === true) console.log(\"%c You Are connected! :)\",\"color:#fff;background-color:green;font-size:25px;border-radius:12px;padding:5px\");\r\n      else console.log(\"%c You Are disconnected! :(\",\"color:#fff;background-color:red;font-size:25px;border-radius:12px;padding:5px\");    \r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"App\">\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand>\r\n              <img\r\n                alt=\"react-bootstrap-logo\"\r\n                src={require('./react-bootstrap-logo.svg')}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n              />\r\n              {' eSchool Task'}\r\n            </Navbar.Brand>\r\n            <Nav className=\"mr-auto\"></Nav>\r\n            {this.state.user !== null ? (<Form inline> <Button variant=\"danger\" onClick={this.logOut}>Logout</Button></Form>) : null}\r\n          </Navbar>\r\n\r\n\r\n          {this.state.user === null ? (<Membership />) : (<StudentList />)}\r\n        </div>\r\n      )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}